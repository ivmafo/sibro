package org.koghi.terranvm.entity;


//Generated 2/04/2011 06:00:41 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.validator.Length;

/**
* SystemVariable generated by hbm2java
*/
@Entity
@Table(name = "system_variable", schema = "public")
public class SystemVariable implements java.io.Serializable {

	/**
     * 
     */
    private static final long serialVersionUID = 1L;
    private int id;
	private String name;
	private Project project;
	private String value;
	private String sintax;
	private Boolean isSystemvariable;
	private Set<IpcMonthly> ipcMonthlies = new HashSet<IpcMonthly>(0);
	private Set<IpcYearly> ipcYearlies = new HashSet<IpcYearly>(0);
	
	

	public SystemVariable() {
		this.isSystemvariable = false;
	}

	public SystemVariable(int id) {
		this.id = id;
	}

	public SystemVariable(int id, String name, String sintax, Boolean isSystemvariable, Set<IpcMonthly> ipcMonthlies, Set<IpcYearly> ipcYearlies, Project project, String value ) {
		this.id = id;
		this.name = name;
		this.sintax = sintax;
		this.isSystemvariable = isSystemvariable;
		this.ipcMonthlies = ipcMonthlies;
		this.ipcYearlies = ipcYearlies;
		this.project = project;
		this.value = value;
		
	}

	@Id
	@SequenceGenerator(name = "pk_sequence", sequenceName = "system_variable_increment_seg", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "pk_sequence")
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "project")
	public Project getProject() {
		return this.project;
	}

	public void setProject(Project project) {
		this.project = project;
	}
	
	
	@Column(name = "name", length = 50)
	@Length(max = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "sintax", length = 50)
	@Length(max = 50)
	public String getSintax() {
		return this.sintax;
	}

	public void setSintax(String sintax) {
		this.sintax = sintax;
	}

	@Column(name = "is_systemvariable")
	public Boolean getIsSystemvariable() {
		return this.isSystemvariable;
	}

	public void setIsSystemvariable(Boolean isSystemvariable) {
		this.isSystemvariable = isSystemvariable;
	}
	
	@Column(name = "value")
	public String getValue() {
		return this.value;
	}

	public void setValue(String value) {
		this.value = value;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "systemVariable")
	public Set<IpcMonthly> getIpcMonthlies() {
		return this.ipcMonthlies;
	}

	public void setIpcMonthlies(Set<IpcMonthly> ipcMonthlies) {
		this.ipcMonthlies = ipcMonthlies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "systemVariable")
	public Set<IpcYearly> getIpcYearlies() {
		return this.ipcYearlies;
	}

	public void setIpcYearlies(Set<IpcYearly> ipcYearlies) {
		this.ipcYearlies = ipcYearlies;
	}
	
	/**
	 * Metodo que retorna las varibales del sistema que son globales al
	 * proyecto 
	 * @param project
	 * @return
	 */
	@Transient
	public static String getSystemVariableByProject(Project project){
		
		List<SystemVariable> systemVariable = project.getSystemVariablesList();
		StringBuilder variables= new StringBuilder();
		for(SystemVariable system : systemVariable){
			variables.append(system.sintax).append("=").append(system.value).append(";");
		}
		return variables.toString();
	}

	
	

	

}
