package org.koghi.terranvm.entity;

//Generated 2/04/2011 06:00:41 PM by Hibernate Tools 3.4.0.CR1

import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityManager;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Query;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.validator.NotNull;

/**
 * IpcYearly generated by hbm2java
 */
@Entity
@Table(name = "ipc_yearly", schema = "public")
public class IpcYearly implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private int id;
	private SystemVariable systemVariable;
	private Integer year;
	private Float value;
	
	public IpcYearly() {
		Calendar currentDate = Calendar.getInstance();
		currentDate.add(Calendar.YEAR, -1);
		setYear(currentDate.get(Calendar.YEAR));
	}

	public IpcYearly(int id) {
		this.id = id;
	}

	public IpcYearly(int id, SystemVariable systemVariable, Integer year, Float value) {
		this.id = id;
		this.systemVariable = systemVariable;
		this.year = year;
		this.value = value;
	}

	@Id
	@SequenceGenerator(name = "pk_sequence", sequenceName = "ipc_yearly_increment_seg", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "pk_sequence")
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ipc_yearly")
	public SystemVariable getSystemVariable() {
		return this.systemVariable;
	}

	public void setSystemVariable(SystemVariable systemVariable) {
		this.systemVariable = systemVariable;
	}

	@Column(name = "year")
	public Integer getYear() {
		return this.year;
	}

	public void setYear(Integer year) {
		this.year = year;
	}

	@Column(name = "value", precision = 8, scale = 8)
	@NotNull
	public Float getValue() {
		return this.value;
	}

	public void setValue(Float value) {
		this.value = value;
	}
	/**
	 * Metodo que retorna una Lista de Ipcs Anuales
	 * @return
	 */
	@Transient
	public  String getIpcs(EntityManager entityManager){
		String ipcString="var IPCY = new Array(); ";
		String sql =  " FROM IpcYearly order by year";
		Query query = entityManager.createQuery(sql);
		@SuppressWarnings("unchecked")
		List<IpcYearly> ipcYearlyList = (List<IpcYearly>)query.getResultList();
		Integer lastyear =0;
		Float lastIpc= 0f;
		for (IpcYearly ipc: ipcYearlyList){
			
			ipcString += "IPCY [" + ipc.getYear() + "] = " + ipc.getValue() +"; ";
			lastyear = ipc.getYear();
//			lastIpc = ipc.getValue();
		}
		for (Integer year = lastyear;year<Calendar.getInstance().get(Calendar.YEAR);year++){
			ipcString += "IPCY [" + (year+1) + "] = " + lastIpc +"; ";
		}
//		System.out.println("IPC ANUAL: "+ipcString);
		return ipcString;		
	}

	@Transient
	public static List<Integer> getYears(){
		List<Integer> years = new ArrayList<Integer>();
		int initYear = 2000;
		int endYear = 2030;
		
		for (int i = initYear; i <= endYear; i++) {
			years.add(i);
		}
		return years;
	}
}
