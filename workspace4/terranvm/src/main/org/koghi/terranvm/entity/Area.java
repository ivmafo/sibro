package org.koghi.terranvm.entity;

// Generated 06-ene-2011 11:10:18 by Hibernate Tools 3.4.0.Beta1

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.envers.Audited;
import org.hibernate.envers.NotAudited;
import org.hibernate.envers.RelationTargetAuditMode;
import org.hibernate.validator.NotNull;

/**
 * Area generated by hbm2java
 */
@Audited
@Entity
@Table(name = "area", schema = "public")
public class Area implements java.io.Serializable {
	/**
	 * private static final long serialVersionUID  
	 * Generado autamaticamente para quitar un warning
	 */
	private static final long serialVersionUID = 1L;
	private int id;
	private AreaType areaType;
	//private RealProperty realProperty;
	private Floor floor;
	private String name;
	private Double area;
	private List<RentableUnit> rentableUnits = new ArrayList<RentableUnit>(0);
	private double totalRentableArea;
	private Boolean deactivate; //indica si el activo o esta activo o desactivo
	private String motive;

	public Area() {
		this.deactivate = false;
	}

	public Area(int id, AreaType areaType, Floor floor, String name, double totalRentableArea) {
		this.id = id;
		this.areaType = areaType;
		this.floor =  floor;
		this.name = name;
		this.totalRentableArea=totalRentableArea;
		this.deactivate = false;
	}

	public Area(int id, AreaType areaType, Floor floor, String name, Double area, List<RentableUnit> rentableUnits, double totalRentableArea) {
		this.id = id;
		this.areaType = areaType;
		this.floor = floor;
		this.name = name;
		this.area = area;
		this.rentableUnits = rentableUnits;
		this.totalRentableArea = totalRentableArea;
		this.deactivate = false;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
			@SequenceGenerator(name = "pk_sequence", sequenceName = "area_id_seq", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "pk_sequence")
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "type", nullable = false)
	@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
	@NotAudited
	@NotNull
	public AreaType getAreaType() {
		return this.areaType;
	}

	public void setAreaType(AreaType areaType) {
		this.areaType = areaType;
	}

	@Column(name = "name", nullable = false)
	@NotNull
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "area")
	public Double getArea() {
		return  this.area;
	}

	public void setArea(Double area) {
		this.area = area;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "area", cascade = CascadeType.ALL)
	public List<RentableUnit> getRentableUnits() {
		return this.rentableUnits;
	}

	public void setRentableUnits(List<RentableUnit> rentableUnits) {
		this.rentableUnits = rentableUnits;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "floor", nullable = false)
	@NotNull
	public Floor getFloor() {
		return this.floor;
	}

	public void setFloor(Floor floor) {
		this.floor = floor;
	}
	
	@Column(name = "total_rentable_area", nullable = false, precision = 17, scale = 17)
	public double getTotalRentableArea() {
		return this.totalRentableArea;
	}

	public void setTotalRentableArea(double totalRentableArea) {
		this.totalRentableArea = totalRentableArea;
	}
	
	@Column(name = "deactivate", nullable = false)
	public Boolean isDeactivate() {
		return deactivate;
	}

	public void setDeactivate(Boolean state) {
		this.deactivate = state;
	}

	@Column(name = "motive")
	public String getMotive() {
		return motive;
	}

	public void setMotive(String motive) {
		this.motive = motive;
	}

}
