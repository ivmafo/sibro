package org.koghi.terranvm.entity;

// Generated 06-ene-2011 14:37:22 by Hibernate Tools 3.4.0.Beta1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.envers.Audited;
import org.hibernate.envers.NotAudited;
import org.hibernate.envers.RelationTargetAuditMode;
import org.hibernate.validator.NotNull;

/**
 * Address generated by hbm2java
 */
@Audited
@Entity
@Table(name = "address", schema = "public")
public class Address implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private int id;

	private BusinessEntity businessEntity;
	private City city;
	private RealProperty realProperty;
	private String kindOfWay;
	private Integer wayNumber;
	private String wayLetter;
	private Boolean isWayBis;
	private String wayBisLetter;
	private String wayEastOrSouth;
	private Integer number;
	private String numberLetter;
	private Integer additionalNumber;
	private String numberEastOrSouth;
	private String other;

	public Address() {
	}

	public Address(int id, City city, String kindOfWay, Integer wayNumber, String wayLetter, Boolean isWayBis, String wayBisLetter, String wayEastOrSouth, Integer number, String numberLetter, Integer additionalNumber, String numberEastOrSouth, String other) {
		this.id = id;
		this.city = city;
		this.kindOfWay = kindOfWay;
		this.wayNumber = wayNumber;
		this.wayLetter = wayLetter;
		this.isWayBis = isWayBis;
		this.wayBisLetter = wayBisLetter;
		this.wayEastOrSouth = wayEastOrSouth;
		this.number = number;
		this.numberLetter = numberLetter;
		this.additionalNumber = additionalNumber;
		this.numberEastOrSouth = numberEastOrSouth;
		this.other = other;
	}

	public Address(int id, BusinessEntity businessEntity, City city, RealProperty realProperty, String kindOfWay, Integer wayNumber, String wayLetter, Boolean isWayBis, String wayBisLetter, String wayEastOrSouth, Integer number, String numberLetter, Integer additionalNumber, String numberEastOrSouth, String other) {
		this.id = id;
		this.businessEntity = businessEntity;
		this.city = city;
		this.realProperty = realProperty;
		this.kindOfWay = kindOfWay;
		this.wayNumber = wayNumber;
		this.wayLetter = wayLetter;
		this.isWayBis = isWayBis;
		this.wayBisLetter = wayBisLetter;
		this.wayEastOrSouth = wayEastOrSouth;
		this.number = number;
		this.numberLetter = numberLetter;
		this.additionalNumber = additionalNumber;
		this.numberEastOrSouth = numberEastOrSouth;
		this.other = other;
	}

	@Id
	@SequenceGenerator(name = "pk_sequence", sequenceName = "address_id_seq", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "pk_sequence")
	@Column(name = "id", unique = true, nullable = true)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "business_entity")
	@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
	@NotAudited
	public BusinessEntity getBusinessEntity() {
		return this.businessEntity;
	}

	public void setBusinessEntity(BusinessEntity businessEntity) {
		this.businessEntity = businessEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "city", nullable = false)
	@NotNull
	@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
	@NotAudited
	public City getCity() {
		return this.city;
	}

	public void setCity(City city) {
		this.city = city;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "real_property")
	@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
	@NotAudited
	public RealProperty getRealProperty() {
		return this.realProperty;
	}

	public void setRealProperty(RealProperty realProperty) {
		this.realProperty = realProperty;
	}

	@Column(name = "kind_of_way", nullable = true)
	public String getKindOfWay() {
		return this.kindOfWay;
	}

	public void setKindOfWay(String kindOfWay) {
		this.kindOfWay = kindOfWay;
	}

	@Column(name = "way_number", nullable = true)
	public Integer getWayNumber() {
		return this.wayNumber;
	}

	public void setWayNumber(Integer wayNumber) {
		this.wayNumber = wayNumber;
	}

	@Column(name = "way_letter", nullable = true)
	public String getWayLetter() {
		return this.wayLetter;
	}

	public void setWayLetter(String wayLetter) {
		this.wayLetter = wayLetter;
	}

	@Column(name = "is_way_bis", nullable = true)
	public Boolean getIsWayBis() {
		return this.isWayBis;
	}

	public void setIsWayBis(Boolean isWayBis) {
		this.isWayBis = isWayBis;
	}

	@Column(name = "way_bis_letter", nullable = true)
	public String getWayBisLetter() {
		return this.wayBisLetter;
	}

	public void setWayBisLetter(String wayBisLetter) {
		this.wayBisLetter = wayBisLetter;
	}

	@Column(name = "way_east_or_south", nullable = true)
	public String getWayEastOrSouth() {
		return this.wayEastOrSouth;
	}

	public void setWayEastOrSouth(String wayEastOrSouth) {
		this.wayEastOrSouth = wayEastOrSouth;
	}

	@Column(name = "number", nullable = true)
	public Integer getNumber() {
		return this.number;
	}

	public void setNumber(Integer number) {
		this.number = number;
	}

	@Column(name = "number_letter", nullable = true)
	public String getNumberLetter() {
		return this.numberLetter;
	}

	public void setNumberLetter(String numberLetter) {
		this.numberLetter = numberLetter;
	}

	@Column(name = "additional_number", nullable = true)
	public Integer getAdditionalNumber() {
		return this.additionalNumber;
	}

	public void setAdditionalNumber(Integer additionalNumber) {
		this.additionalNumber = additionalNumber;
	}

	@Column(name = "number_east_or_south", nullable = true)
	public String getNumberEastOrSouth() {
		return this.numberEastOrSouth;
	}

	public void setNumberEastOrSouth(String numberEastOrSouth) {
		this.numberEastOrSouth = numberEastOrSouth;
	}

	@Column(name = "other", nullable = true)
	public String getOther() {
		return this.other;
	}

	public void setOther(String other) {
		this.other = other;
	}
	
	@Override
	public String toString() {
		if (this.other == null || this.other.isEmpty()) {
			String dirTemp = "";
			if (!(this.kindOfWay == null || this.kindOfWay.isEmpty()))
				dirTemp += this.kindOfWay;
			
			if (this.wayNumber!=null && this.wayNumber != 0)
				dirTemp += " " +this.wayNumber;
			if (!(this.wayLetter == null || this.wayLetter.isEmpty()))
				dirTemp += " " + this.wayLetter;
			if (this.isWayBis!=null && this.isWayBis) {
				dirTemp += " Bis";
				if (!(this.wayBisLetter == null || this.wayBisLetter.isEmpty()))
					dirTemp += " " + this.wayBisLetter;
			}
			if (!(this.wayEastOrSouth == null || this.wayEastOrSouth.isEmpty()))
				dirTemp += " " + this.wayEastOrSouth;
			if (this.number!=null && this.number != 0)
				dirTemp += " No. " + this.number;
			if (!(this.numberLetter == null || this.numberLetter.isEmpty()))
				dirTemp += " " + this.numberLetter;
			if (this.additionalNumber!=null && this.additionalNumber != 0){
				dirTemp += " - "+this.additionalNumber;
			}
				
			if (!(this.numberEastOrSouth == null || this.numberEastOrSouth.isEmpty()))
				dirTemp += " " + this.numberEastOrSouth;
			if (dirTemp.isEmpty())
				dirTemp = "No hay direcci√≥n configurada";
			return dirTemp;

		} else {
			return this.other;
		}
	}

}
