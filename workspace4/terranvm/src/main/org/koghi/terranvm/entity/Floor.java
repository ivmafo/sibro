package org.koghi.terranvm.entity;

// Generated 05-ene-2011 12:42:23 by Hibernate Tools 3.4.0.Beta1

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;


import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.envers.Audited;
import org.hibernate.validator.NotNull;

/**
 * Floor generated by hbm2java
 */
@Audited
@Entity
@Table(name = "floor", schema = "public")
public class Floor implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private int id;
	private Construction construction;
	private Double area;
	private String floorNumber;
	private Set<Area> areasList = new HashSet<Area>(0);
	private double totalRentableArea;
	private Boolean deactivate; //indica si el activo o esta activo o desactivo
	private String motive;

	public Floor() {
		this.deactivate = false;
	}

	public Floor(int id, Construction construction, Double area, String floorNumber,  Set<Area> areas, double totalRentableArea) {
		this.id = id;
		this.construction = construction;
		this.area = area;
		this.floorNumber = floorNumber;
		this.areasList = areas;
		this.totalRentableArea = totalRentableArea;
		this.deactivate = false;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
		@SequenceGenerator(name = "pk_sequence", sequenceName = "floor_id_seq", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "pk_sequence")
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "construction", nullable = false)
	@NotNull
	public Construction getConstruction() {
		return this.construction;
	}

	public void setConstruction(Construction construction) {
		this.construction = construction;
	}

	@Column(name = "area")
	public Double getArea() {
		return this.area;
	}

	public void setArea(Double areaApartmentBuilding) {
		this.area = areaApartmentBuilding;
	}

	@Column(name = "floor_number", nullable = false)
	@NotNull
	public String getFloorNumber() {
		return this.floorNumber;
	}

	public void setFloorNumber(String floorNumberApartmentBuilding) {
		this.floorNumber = floorNumberApartmentBuilding;
	}
	
	@Transient
	public List<Area> getAreas() {
		return new ArrayList<Area>(areasList);
	}

	public void setAreas(List<Area> areas) {
		this.areasList = new HashSet<Area>(areas);
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "floor", cascade = CascadeType.ALL)
	public Set<Area> getAreasList() {
		return areasList;
	}

	public void setAreasList(Set<Area> areasList) {
		this.areasList = areasList;
	}

	@Column(name = "total_rentable_area", nullable = false, precision = 17, scale = 17)
	public double getTotalRentableArea() {
		return this.totalRentableArea;
	}

	public void setTotalRentableArea(double totalRentableArea) {
		this.totalRentableArea= totalRentableArea;
	}
	
	@Column(name = "deactivate", nullable = false)
	public Boolean isDeactivate() {
		return deactivate;
	}

	public void setDeactivate(Boolean state) {
		this.deactivate = state;
	}
	
	@Column(name = "motive")
	public String getMotive(){
		return this.motive;
	}
	
	public void setMotive(String motive){
		this.motive=motive;
	}
}
