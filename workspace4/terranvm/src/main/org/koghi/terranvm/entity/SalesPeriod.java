package org.koghi.terranvm.entity;

// Generated 22/03/2011 05:11:14 PM by Hibernate Tools 3.4.0.Beta1

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.envers.Audited;
import org.hibernate.validator.NotNull;

/**
 * SalesPeriod generated by hbm2java
 */
@Entity
@Audited
@Table(name = "sales_period", schema = "public")
public class SalesPeriod implements java.io.Serializable {


	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;


	/**Arreglo que representa los meses en español. La posición corresponde al mes que se hace referenci según la clase Calendar.
	 * Ejemplo, para obtener el mes de febrero Months[Calendar.FEBRUARY]
	**/
	public static final String[] MONTHS = { "ENERO",
											"FEBRERO",
											"MARZO",
											"ABRIL",
											"MAYO",
											"JUNIO",
											"JULIO",
											"AGOSTO",
											"SEPTIEMBRE",
											"OCTUBRE",
											"NOVIEMBRE",
											"DICIEMBRE" 
											};
	
	
	private int id;
	private RealProperty realProperty;
	private int month;
	private int year;
	private List<Sales> saleses = new ArrayList<Sales>(0);

	public SalesPeriod() {
	}

	public SalesPeriod(int id, RealProperty realProperty, int month, int year) {
		this.id = id;
		this.realProperty = realProperty;
		this.month = month;
		this.year = year;
	}

	public SalesPeriod(int id, RealProperty realProperty, int month, int year,
			List<Sales> saleses) {
		this.id = id;
		this.realProperty = realProperty;
		this.month = month;
		this.year = year;
		this.saleses = saleses;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	@SequenceGenerator(name = "pk_sequence", sequenceName = "sales_period_id_seq", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "pk_sequence")
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "real_property", nullable = false)
	@NotNull
	public RealProperty getRealProperty() {
		return this.realProperty;
	}

	public void setRealProperty(RealProperty realProperty) {
		this.realProperty = realProperty;
	}

	@Column(name = "month", nullable = false)
	public int getMonth() {
		return this.month;
	}

	public void setMonth(int month) {
		this.month = month;
	}

	@Column(name = "year", nullable = false)
	public int getYear() {
		return this.year;
	}

	public void setYear(int year) {
		this.year = year;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesPeriod",cascade = CascadeType.ALL)
	public List<Sales> getSaleses() {
		return this.saleses;
	}

	public void setSaleses(List<Sales> saleses) {
		this.saleses = saleses;
	}
	
	@Transient
	public static List<Integer> getYears(){
		List<Integer> years = new ArrayList<Integer>();
		int initYear = 2000;
		int endYear = 2030;
		
		for (int i = initYear; i <= endYear; i++) {
			years.add(i);
		}
		return years;
	}

}
